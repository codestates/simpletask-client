{"version":3,"sources":["pages/textEntry.js","pages/MainPage.js","pages/Login.js","pages/Signup.js","pages/Mypage.js","pages/Edit.js","pages/WriteForm.js","pages/UpdateForm.js","pages/Bye.js","App.js","reportWebVitals.js","index.js"],"names":["TextEntry","userData","texts","HandleTextDelete","HandleTextIdThrow","history","useHistory","className","title","id","value","user_id","onClick","event","targetName","target","email","console","log","push","text","createdAt","MainPage","isLogin","logoutHandler","renderText","obj","content","document","createElement","name","date","editBtn","deleteBtn","content_title","content_text","editbt","classList","add","textContent","addEventListener","updateTextHandler","deleteTextHandler","append","removeContent","querySelector","remove","reset","contentList","Ocontents","i","renderContent","filtered","filter","el","filtering","map","Login","props","handleInputValue","key","e","setState","state","password","err","bind","clickLoginhandle","nomemberLogin","this","axios","post","then","res","data","isGit","loginHandler","catch","nomemberLoginHandler","window","location","assign","onSubmit","preventDefault","type","onChange","to","gitOauth","React","Component","withRouter","Signup","nickname","handleSignup","alert","deleteHand","useState","friendName","setFriend","friend","handleChangeFrn","friendId","Edit","Password","EditPassword","ClickEdithandle","WriteForm","createWrite","textInfo","HandleTextCreate","UpdateForm","updateText","text_id","HandleTextUpdate","App","accessToken","getAccessToken","getGitHubUserInfo","authorizationCode","URL","href","searchParams","get","innerHTML","a","resp","headers","authorization","response","login","created_at","componentDidMount","int","exact","path","render","textHandler","ViewEdit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5f1af126.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst TextEntry = ({userData, texts, HandleTextDelete, HandleTextIdThrow}) =>{\r\n    let history = useHistory()\r\n\r\n    let updateTextHandler = (event) =>{\r\n        let targetName = event.target;\r\n        if(targetName.value === userData.email){\r\n            console.log('ok');\r\n            HandleTextIdThrow(targetName.id);\r\n            history.push('/updateform')\r\n        }else{\r\n            console.log('no')\r\n        }\r\n    }\r\n\r\n    let deleteTextHandler = (event) =>{\r\n        let targetName = event.target;\r\n        if(targetName.value === userData.email){\r\n            console.log('ok')\r\n            HandleTextDelete(targetName.id);\r\n        }else{\r\n            console.log('no');\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"contents\">\r\n            <div className='content_title'>\r\n                <span className=\"title\">제목 : {texts.title}</span>\r\n                {/* <span className='contents_id'>글 번호 : {texts.id}</span> */}\r\n                <span className='editbt'>\r\n                    <button id={texts.id} value={texts.user_id} onClick={updateTextHandler}>수정</button>\r\n                    <button id={texts.id} value={texts.user_id} onClick={deleteTextHandler}>삭제</button>\r\n                </span>\r\n            </div>\r\n            <div className='content_text'>\r\n                <div className='name'>작성자 : {texts.user_id}</div>\r\n                <div className=\"text\">내용 : {texts.text}</div>\r\n                <div className=\"date\">작성일 : {texts.createdAt}</div>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n   \r\n   \r\n\r\nexport default TextEntry;\r\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TextEntry from \"./textEntry\"\n\nfunction MainPage({texts, isLogin, userData, logoutHandler, HandleTextDelete, HandleTextIdThrow}) {\n    \n    let history = useHistory()\n    let renderText = (obj) =>{\n        let content = document.createElement('div');\n        let name = document.createElement('div')\n        let title = document.createElement('span');\n        let text = document.createElement('div');\n        let date = document.createElement('div');\n        let editBtn = document.createElement('button');\n        let deleteBtn = document.createElement('button');\n        let content_title = document.createElement('div')\n        let content_text = document.createElement('div')\n        let editbt = document.createElement('span')\n        \n        content.classList.add('contents')\n        name.classList.add('name')\n        title.classList.add('title');\n        text.classList.add('text');\n        date.classList.add('date');\n        editBtn.classList.add('editContent');\n        deleteBtn.classList.add('deleteContent');\n        content_title.classList.add('content_title')\n        content_text.classList.add('content_text')\n        editbt.classList.add('editbt')\n    \n        name.textContent = `작성자 : ${obj.user_id}`\n        title.textContent = `제목 : ${obj.title}`;\n        text.textContent = `내용 : ${obj.text}`;\n        date.textContent = `작성일 : ${obj.createdAt}`;\n        editBtn.textContent = \"수정\";\n        editBtn.id = obj.id;\n        editBtn.value = obj.user_id\n        deleteBtn.textContent = \"삭제\";\n        deleteBtn.id = obj.id;\n        deleteBtn.value = obj.user_id;\n\n        editBtn.addEventListener('click', updateTextHandler);\n        deleteBtn.addEventListener('click', deleteTextHandler);\n\n        editbt.append(editBtn, deleteBtn)\n        content_title.append(title, editbt)\n        content_text.append(name, text, date)\n        content.append(content_title, content_text)\n        return content;\n    }\n\n    let renderContent = () => {\n        let contentList = document.createElement('div')\n        contentList.classList.add('contents_inside');\n        let Ocontents = document.querySelector('.contents_outside');\n\n        for(let i of texts){\n            contentList.append(renderText(i));\n        }\n        Ocontents.append(contentList);\n    }\n\n    let removeContent = () => {\n        let list = document.querySelector('.contents_inside');\n        list.remove();       \n    }\n\n    let filtering = () => {\n        removeContent();\n        let contentList = document.createElement('div')\n        contentList.classList.add('contents_inside');\n        let Ocontents = document.querySelector('.contents_outside');\n        let filtered = texts.filter((el) => {\n            return el.user_id === userData.email;\n        });\n\n        for(let i of filtered){\n            contentList.append(renderText(i));\n        }\n        Ocontents.append(contentList);\n       \n    }\n\n    let reset = () => {\n        removeContent();\n        renderContent();\n    }\n\n    let updateTextHandler = (event) =>{\n        let targetName = event.target;\n        if(targetName.value === userData.email){\n            console.log('ok');\n            HandleTextIdThrow(targetName.id);\n            history.push('/updateform')\n        }else{\n            console.log('no')\n        }\n\n\n    }\n\n    let deleteTextHandler = (event) =>{\n        let targetName = event.target;\n        if(targetName.value === userData.email){\n            console.log('ok')\n            HandleTextDelete(targetName.id);\n            history.push('/bye')\n            history.push('/')\n        }else{\n            console.log('no');\n        }\n\n    }\n\n    function signinClick() {\n        history.push(\"/signin\");\n    }\n\n    function signupClick() {\n        history.push(\"/signup\")\n    }\n\n\n    return  isLogin === false ? (\n        <div>\n            <header>\n                <div className = \"bigtitle\">Simpletask</div>\n                <div className = \"btcollect1\">\n                    <span className = 'smallbt' onClick = {signinClick}>로그인</span>\n                    <span className = 'smallbt' onClick = {signupClick}>회원가입</span>\n                </div>\n            </header>\n        </div>\n    ):(\n        <div>\n            <header>\n                <div className = \"bigtitle\">Simpletask</div>\n                <div className = 'btcollect1'>\n                    <span className='smallbt' onClick={()=>{logoutHandler()}}>로그아웃</span>\n                    {userData ? (\n                        <span className='smallbt' onClick={()=>{history.push(\"/mypage\")}}>내 정보</span>\n                    ) : ( '' )}\n                </div>\n                    {userData ? (\n                        <div className='btcollect2'>\n                            <button onClick={() => reset()}> 전체글 </button> \n                            <button onClick={() => filtering()}> 내가작성한글만 </button>\n                            <button onClick={() => history.push(\"/writeform\")}> 글쓰기  </button>\n                        </div>\n                        ) : ( ''\n                    )}\n                <main>\n                    <div className=\"contents_outside\">\n                        <div className=\"contents_inside\">\n                            {texts.map(text =>\n                                <TextEntry texts={text} key = {text.id} userData={userData} HandleTextDelete={HandleTextDelete} HandleTextIdThrow={HandleTextIdThrow}/>\n                                )}\n                        </div>\n                    </div>                   \n                </main>\n            </header>\n        </div>\n    )\n}\n\nexport default MainPage","import React from 'react';\nimport {Link, withRouter} from \"react-router-dom\";\nimport axios from 'axios';\nclass Login extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            email: null,\n            password: null,\n            err: \"\"\n        }\n        this.handleInputValue = this.handleInputValue.bind(this)\n        this.clickLoginhandle = this.clickLoginhandle.bind(this)\n        this.nomemberLogin = this.nomemberLogin.bind(this);\n    }\n    handleInputValue = (key) => (e) => {\n        this.setState({ [key]: e.target.value });\n    \n      };\n\n    clickLoginhandle(){\n       \n        if(!this.state.email || !this.state.password) {\n          this.setState({\n              err : \"모든 항목 작성해주세요\"\n          })\n          return ;\n        }\n        else {\n           this.setState({\n               err : \"\"\n           })\n        }\n    \n        axios.post(\"https://52.79.241.137:8080/signin\",\n            {email:this.state.email, password:this.state.password})\n        .then(()=>{\n            return axios.post(\"https://52.79.241.137:8080/user\",{email:this.state.email})\n        })\n        .then((res)=>{\n            res.data.data.isGit = false\n            this.props.loginHandler(res.data.data)\n            this.props.history.push('/')         \n        })\n        .catch(err=>{         \n            console.log(err);\n        })\n    }\n \n    nomemberLogin(){\n        this.props.nomemberLoginHandler();\n        this.props.history.push('/');\n    }\n    \n    gitOauth() {\n        window.location.assign('https://github.com/login/oauth/authorize?client_id=77ea45a221e7f8a02f07')\n    }\n\n    render(){\n        return(\n            <div id=\"login\">\n                <div className='bigtitle'>LogIn Page</div>\n                <div className='myinfo'>\n                    <form onSubmit = {(e)=>{e.preventDefault()}}>\n                        <div>\n                            <span>Email </span>\n                            <input type=\"email\" onChange = {this.handleInputValue(\"email\")}></input>\n                        </div>\n                        <div>\n                            <span>Password </span>\n                            <input type=\"password\" onChange ={this.handleInputValue(\"password\")}></input>\n                        </div>\n                        <div>\n                            <Link to=\"/signup\">아이디가 없으신가요?</Link>\n                        </div>\n                            <button className=\"login-button\" onClick={this.clickLoginhandle}>LogIn</button>\n                            <button className=\"login-button\" onClick={this.nomemberLogin}>비회원 로그인</button>\n                            <button onClick={() => this.gitOauth()}>git 로그인</button> \n                    </form>\n                        {this.state.err ? <div  className=\"alert-box\" >{this.state.err}</div> : \"\"} \n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Login)","import React from \"react\";\r\nimport {Link, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Signup extends React.Component {\r\n\r\n  constructor(props){\r\n      super(props)\r\n      this.state ={\r\n        email : '',\r\n        name : '' ,\r\n        password : '',\r\n        nickname : '',\r\n        err : ''\r\n      }\r\n      this.handleInputValue = this.handleInputValue.bind(this)\r\n      this.handleSignup = this.handleSignup.bind(this)\r\n  }\r\n\r\n  handleInputValue = (key) => (e) => {\r\n    this.setState({ [key]: e.target.value });\r\n  };\r\n\r\n  handleSignup() {\r\n    \r\n    if(!this.state.email || !this.state.name ||! this.state.password || !this.state.nickname){\r\n      this.setState({\r\n        err : \"모든 항목을 작성해 주세요\"\r\n      })\r\n      return ;\r\n    }\r\n\r\n    else {\r\n      this.setState({\r\n        err : \"\"\r\n      })\r\n    }\r\n  return axios.post(\"https://52.79.241.137:8080/signup\",\r\n  {email:this.state.email ,name:this.state.name, password:this.state.password, nickname:this.state.nickname})\r\n  .then(()=>{\r\n    alert(\"아이디 생성 완료\");\r\n  })\r\n  .then((res) =>{\r\n    this.props.history.push('/');\r\n  })\r\n  .catch(err=>{\r\n    console.log(err);\r\n  })\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <div className='bigtitle'>회원가입</div>\r\n          <div className='myinfo'>\r\n            <div>\r\n              이메일\r\n              <input type=\"email\" onChange= {this.handleInputValue(\"email\")} ></input>\r\n            </div>\r\n            <div>\r\n                이름\r\n            <input    onChange= {this.handleInputValue(\"name\")}></input>\r\n              </div>\r\n            <div>\r\n              비밀번호\r\n              <input type=\"password\" onChange= {this.handleInputValue(\"password\")}></input>\r\n            </div>\r\n            <div>\r\n              닉네임\r\n              <input  onChange= {this.handleInputValue(\"nickname\")}></input>\r\n            </div>\r\n            <div>\r\n              <Link to=\"/signin\">이미 아이디를 갖고 계신가요?</Link>  \r\n            </div>\r\n            <button onClick={this.handleSignup} className=\"signupBtn\">회원가입</button>\r\n          <div>{this.state.err}</div>\r\n          </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Signup)","import React, {useState} from \"react\"\nimport { withRouter,useHistory} from \"react-router-dom\";\nimport axios from 'axios';\n//props는 userdata \nfunction  Mypage ({userData,deleteHand}) {\n//    '/deleteid' 아이디삭제\n  const [friendName, setFriend] = useState('')\n  const handleChangeFrn = (e) => {\n    setFriend(e.target.value)\n  };\n\n  const addfriend = () => {\n    axios.post(\"https://52.79.241.137:8080/addfriend\", \n    {\n      name: userData.name,\n      friendId: friendName\n    })\n    .then(res => {\n      history.push('/bye')\n      history.push('/mypage')\n    }\n    )\n  }\n\n  let history = useHistory()\n\n  function mainClick() {\n    history.push('/')\n  }\n\n  function editpw() {\n    history.push('/editpassword')\n  }\n\n  return ( \n    <div>\n      <div className='bigtitle'>마이페이지</div>\n      <div className='myinfo'>\n        <div> 이메일  : {userData.email} </div>\n        <div> 이름   : {userData.name} </div>\n        <div> 닉네임 : {userData.nickname} </div>\n        {userData.friend ? <div>관심있는 사람 : {userData.friend}</div> : ''}\n        <div>생성일 : {userData.createdAt}</div>\n        <div className='btcollect3'>\n          <button onClick={mainClick}> 메인페이지</button>\n          {userData.isGit === false ?\n          <span>\n              <button onClick={editpw}> 비밀번호 변경 </button>\n              <button onClick={deleteHand}>회원 탈퇴</button>\n          <div className='addfriend'>\n            <input onChange={(e) => handleChangeFrn(e)}></input>\n            <button onClick={addfriend}>관심 갖기</button>\n          </div>\n          </span>\n              : ''\n            }\n          </div>\n      </div>\n    </div>\n  ) \n}\nexport default withRouter(Mypage)","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Edit extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state ={\r\n                Password : '',\r\n                EditPassword: '',\r\n                err : ''\r\n            }\r\n       this.handleInputValue = this.handleInputValue.bind(this)\r\n       this.ClickEdithandle = this.ClickEdithandle.bind(this)\r\n    }\r\n    handleInputValue = (key) => (e) => {\r\n        this.setState({ [key]: e.target.value });\r\n      };\r\n    ClickEdithandle() {\r\n       const {userData} = this.props\r\n       const {Password,EditPassword} = this.state\r\n       if(!Password || !EditPassword){\r\n           this.setState({\r\n               err : \"모두 작성\"\r\n           })\r\n           return ;\r\n       }\r\n       else {\r\n           this.setState({\r\n               err:\"\"\r\n           })\r\n       }\r\n       return axios.post(\"https://52.79.241.137:8080/editpw\",\r\n       {email:userData.email, password:EditPassword})\r\n        .then((res)=>{\r\n            this.props.history.push('/mypage')\r\n        })\r\n        .catch((err)=>{\r\n        console.log(err);\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className='bigtitle'>비밀번호 수정</div>\r\n                <div className='myinfo'>\r\n                    <div>\r\n                        비밀번호 <input type=\"password\" onChange = {this.handleInputValue(\"Password\")}></input>\r\n                    </div>\r\n                    <div>\r\n                        바꿀 비밀번호 <input type=\"password\" onChange = {this.handleInputValue(\"EditPassword\")}></input>\r\n                    </div>\r\n                    <span>\r\n                        <button onClick = {this.ClickEdithandle}>변경</button>\r\n                    </span>\r\n                    <span>\r\n                        <button onClick = {()=>{this.props.history.push('/mypage')}}>취소</button>\r\n                    </span>\r\n                        {this.state.err ? <div  className=\"alert-box\">{this.state.err}</div> : \"\"}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Edit)","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass WriteForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            title: '',\n            text: '',\n        }\n        this.handleInputValue = this.handleInputValue.bind(this);\n        this.createWrite = this.createWrite.bind(this);\n    }\n\n    handleInputValue = (key) => (e) => {\n        this.setState({[key]: e.target.value});\n    }\n\n    createWrite(){\n        if(!this.state.title){\n            alert(\"제목을 입력해주세요\");\n            return;\n        }\n        let textInfo = {title: this.state.title, text: this.state.text, user_id: this.props.userData.email}\n        this.props.HandleTextCreate(textInfo);\n        this.props.history.push(\"/\");\n    }\n\n    render(){\n        return(\n            <div>\n                <div className='bigtitle'>글 쓰기</div>\n                <main className='myinfo'>\n                    <div>\n                        <span>제목</span>\n                        <input id=\"titleform\" type=\"text\" onChange={this.handleInputValue(\"title\")}></input>\n                    </div>\n                    <div>\n                        <span>내용</span>\n                        <textarea id=\"textform\" onChange={this.handleInputValue(\"text\")}></textarea>\n                    </div>\n                    <div>\n                        <button onClick={() => this.props.history.push('/')}>이전으로</button>\n                        <button onClick={this.createWrite}>작성하기</button>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(WriteForm);","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass UpdateForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            title: '',\n            text: '',\n\n        }\n        this.handleInputValue = this.handleInputValue.bind(this);\n        this.updateText = this.updateText.bind(this);\n    }\n\n    handleInputValue = (key) => (e) => {\n        this.setState({[key]: e.target.value});\n    }\n\n    updateText(){\n        let textInfo = {title: this.state.title, text: this.state.text, id: this.props.text_id}\n        this.props.HandleTextUpdate(textInfo);\n        this.props.history.push(\"/\");\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"bigtitle\">글 수정</div>\n                <main className='myinfo'>\n                    <div>\n                        <span>제목</span>\n                        <input id=\"titleform\" type=\"text\" onChange={this.handleInputValue(\"title\")}></input>\n                    </div>\n                    <div>\n                        <span>내용</span>\n                        <textarea id=\"textform\" onChange={this.handleInputValue(\"text\")}></textarea>\n                    </div>\n                    <div>\n                      \n                        <button onClick={() => this.props.history.push('/')}>이전으로</button>\n                        <button onClick={this.updateText}>수정하기</button>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(UpdateForm);","import React from \"react\";\nimport { withRouter, useHistory } from \"react-router-dom\";\n\nfunction Bye () {\n    let history = useHistory()\n\n    function mainClick() {\n        history.push(\"/\");\n    }\n\n    return (\n        <div>\n            <center>\n                <h1>그동안 감사했습니다.</h1>\n                <button onClick = {mainClick}> 메인페이지로</button>\n            </center>\n        </div>\n    )\n}\n\nexport default withRouter(Bye)","import './App.css';\nimport React from \"react\";\nimport {withRouter, Route, BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\"\nimport Login from \"./pages/Login\"\nimport Signup from \"./pages/Signup\"\nimport Mypage from \"./pages/Mypage\"\nimport Edit from \"./pages/Edit\"\nimport axios from \"axios\";\nimport WriteForm from \"./pages/WriteForm\";\nimport UpdateForm from \"./pages/UpdateForm\";\nimport Bye from \"./pages/Bye\"\n\n// import axios from 'axios';\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      isLogin: false,\n      userData: null,\n      text : null,\n      text_id: null,\n      accessToken: '',\n    }\n    this.loginHandler = this.loginHandler.bind(this);\n    this.logoutHandler = this.logoutHandler.bind(this);\n    this.nomemberLoginHandler = this.nomemberLoginHandler.bind(this);\n    this.deleteHand = this.deleteHand.bind(this);\n    this.HandleTextDelete = this.HandleTextDelete.bind(this);\n    this.HandleTextIdThrow = this.HandleTextIdThrow.bind(this);\n    this.HandleTextCreate = this.HandleTextCreate.bind(this);\n    this.HandleTextUpdate = this.HandleTextUpdate.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getGitHubUserInfo = this.getGitHubUserInfo.bind(this)\n  }\n\n  componentDidMount(){\n    const url = new URL(window.location.href)\n    const authorizationCode = url.searchParams.get('code')\n    if (authorizationCode) {\n      this.getAccessToken(authorizationCode)\n    }\n    \n    axios.get(\"https://52.79.241.137:8080/contents\")\n    .then((res)=>{ \n      return axios.get(\"https://52.79.241.137:8080/contents\")\n    })\n    .then((res)=>{\n      this.setState({\n        text : res.data.data\n      })\n    })\n\n    const htmlTitle = document.querySelector(\"title\");\n    htmlTitle.innerHTML = 'Simpletask';\n    \n  }\n\n  async getAccessToken(authorizationCode) {\n    let resp = await axios.post('https://52.79.241.137:8080/callback', { authorizationCode: authorizationCode })\n    this.setState({\n      isLogin: true,\n      accessToken: resp.data.accessToken\n    })\n    this.getGitHubUserInfo()\n  } \n\n  async getGitHubUserInfo() {\n    const  accessToken  = this.state.accessToken\n    let response = await axios.get('https://api.github.com/user', {\n      headers: {\n        authorization: `token ${accessToken}`,\n      }\n    })\n    const { email, login, name, created_at } = response.data\n    this.setState({\n      userData: {\n        isGit: true,\n        email ,\n        name: login,\n        nickname: name,\n        createdAt: created_at\n      }\n    })\n    this.props.history.push('/');\n  }\n  // user정보 및 isLogin 변환\n  loginHandler(obj){\n       this.setState({\n         isLogin :  true,\n         userData : obj,\n       })\n    }\n  //text state 변환시켜주기\n  //  textHandler(obj){\n  //    this.setState({\n  //      text : obj\n  //    })\n  //  }\n  logoutHandler(){\n   axios.post(('https://52.79.241.137:8080/signout'))\n   .then(()=>{\n    this.setState({\n      isLogin: false,\n      userData:null\n    })\n   })\n  }\n  // 비회원 로그인 \n  nomemberLoginHandler(){\n    this.setState({\n      isLogin: true\n    })\n  }\n  //회원탈퇴\n  deleteHand(){\n    this.props.history.push('/bye')\n   axios.post(\"https://52.79.241.137:8080/deleteid\",{email:this.state.userData.email})\n   .then(()=>{\n     this.setState({\n      isLogin: false,\n      userData : null\n    })\n   })\n   .then(()=>{\n    \n  })\n  .catch(err=>console.log(err))\n  }\n\n  //글 작성 함수\n  HandleTextCreate(obj){\n    axios.post(\"https://52.79.241.137:8080/create\", obj)\n    .then(() => {\n      this.componentDidMount();\n    })\n    .then((res) =>{\n      this.props.history.push('/');\n    })\n    .catch((err) => console.log(err));\n  }\n\n  //글 수정 텍스트 아이디 전달함수\n  HandleTextIdThrow(int){\n    this.setState({\n      text_id: int\n    })\n  }\n\n  //글 수정 함수\n  HandleTextUpdate(obj){\n    axios.post(\"https://52.79.241.137:8080/edit\", obj)\n    .then(() => {\n      this.componentDidMount();\n    })\n    .then((res) =>{\n      this.props.history.push('/');\n    })\n    .catch((err) => console.log(err));\n  }\n\n  //글 삭제 함수\n  HandleTextDelete(int){\n    axios.post(\"https://52.79.241.137:8080/delete\", {id: int})\n    .then(() => {\n      this.componentDidMount();\n    })\n    .catch((err) => console.log(err))\n  }\n\n  // addfriend()\n\n  render(){\n    const {isLogin, accessToken} = this.state\n    return (\n          <Switch>\n            <Route exact path=\"/\" render={() => <MainPage isLogin={this.state.isLogin} texts={this.state.text} userData={this.state.userData} logoutHandler={this.logoutHandler} HandleTextDelete={this.HandleTextDelete} HandleTextIdThrow={this.HandleTextIdThrow}></MainPage>}></Route>\n            <Route exact path=\"/signin\" render={() => <Login loginHandler = {this.loginHandler} textHandler ={this.textHandler} nomemberLoginHandler={this.nomemberLoginHandler}></Login>}></Route>\n            <Route exact path=\"/signup\" render={() => <Signup></Signup>}></Route>\n            <Route exact path=\"/mypage\" render={() => <Mypage isLogin={this.state.isLogin} userData={this.state.userData} ViewEdit={this.ViewEdit} deleteHand={this.deleteHand} accessToken={this.state.accessToken} ></Mypage>}></Route>\n            <Route exact path=\"/editpassword\" render={() => <Edit userData={this.state.userData}></Edit>}></Route>\n            <Route exact path=\"/writeform\" render={()=> <WriteForm userData={this.state.userData} HandleTextCreate={this.HandleTextCreate}></WriteForm>}></Route>\n            <Route exact path=\"/updateform\" render={()=> <UpdateForm userData={this.state.userData} text_id={this.state.text_id} HandleTextUpdate={this.HandleTextUpdate}></UpdateForm>}></Route>\n            <Route exact path=\"/bye\" render={()=> <Bye/>} />\n          </Switch>\n\n    );\n  }\n}\nexport default withRouter(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}